[project]
name = "SONAR"
version = "1.10.1"
description = "SONAR is an archive of scholarly publications. It intends to collect, promote and preserve the publications of authors affiliated with Swiss public research institutions."
authors = [{name = "RERO",email = "<software@rero.ch>"}]
license = "GNU Affero General Public License v3.0"
requires-python = ">= 3.9,<3.10"

dependencies = [
    "lxml (>=4.9.1)",
    "xmlsec (<1.3.15)",
    "marshmallow (>=3.0.0,<4.0.0)",
    "uwsgi (>=2.0)",
    "uwsgi-tools (>=1.1.1)",
    "uwsgitop (>=0.11)",

    "invenio-oaiharvester @ git+https://github.com/inveniosoftware/invenio-oaiharvester.git@v1.0.0a4",

    "invenio-search [elasticsearch7] (>=2.1.0,<3.0.0)",

    # Invenio core modules
    "invenio-app (>=1.4.0,<3.0.0)",
    "invenio-base (>=1.3.0,<3.0.0)",
    "invenio-cache (>=1.1.1,<2.0.0)",
    "invenio-celery (>=1.2.5,<2.0.0)",
    "invenio-config (>=1.0.3,<2.0.0)",
    "invenio-i18n (>=2.0.0,<3.0.0)",
    "invenio-db [postgresql] (>=1.1.0,<2.0.0)",

    # Invenio base bundle
    "invenio-admin (>=1.4.0,<1.5.0)",
    "invenio-assets (>=3.0.0,<4.0.0)",
    "invenio-formatter (>=2.0.0,<3.0.0)",
    "invenio-logging (>=2.0.0,<3.0.0)",
    "invenio-mail (>=2.0.0,<3.0.0)",
    "invenio-rest (>=1.3.0,<2.0.0)",
    "invenio-theme (>3.0.0,<4.0.0)",

    # Invenio auth bundle
    "invenio-access (>=2.0.0,<3.0.0)",
    "invenio-accounts (>=5.0.0,!=5.1.0,<7.0.0)",
    "invenio-oauth2server (>=2.3.0,<3.0.0)",
    "invenio-oauthclient (>=4.0.0,<5.0.0)",
    "invenio-userprofiles (>=3.0.0,<4.0.0)",

    "invenio-indexer (>=2.2.0,<3.0.0)",
    "invenio-jsonschemas (>=1.1.4,<2.0.0)",
    "invenio-oaiserver (>=2.2.0,<3.0.0)",
    "invenio-pidstore (>=1.3.0,<2.0.0)",
    "invenio-records-rest (>=2.2.0,<3.0.0)",
    "invenio-records-ui (>=1.2.0,<2.0.0)",
    "invenio-records (>=2.1.0,<3.0.0)",
    "invenio-search-ui (>=2.4.0,<3.0.0)",
    "invenio-stats (==4.0.1)",
    "invenio-records-resources",

    # Files
    "invenio-files-rest (>=2.0.0,<3.0.0)",
    "invenio-previewer (>=2.0.0,<3.0.0)",
    "invenio-records-files (>=1.2.1,<1.3.0)",

    # Pinned due to before_first_request deprecation https://flask.palletsprojects.com/en/2.2.x/api/#flask.Flask.before_first_request
    "Flask (>=2.2.0,<2.3.0)",
    "sentry-sdk (<2.0.0)",

    ## RERO ILS specific python modules
    "PyYAML (>=5.3.1)",
    "dateparser (>=1.1.1)",
    "isbnlib (>=3.9.1)",
    "requests (>=2.23.0)",
    "polib",
    "xmltodict",
    "redisbeat  (>1.2.5,<1.3.0)",
    "jsonpickle (>=1.4.1)",
    "ciso8601",

    ## Additionnal constraints on python modules
    "markdown-captions",
    "zipp",

    ## Deployment
    "python-dotenv (>=0.13.0)",

    ## Third party optional modules used by RERO ILS
    "freezegun (>=1.1.0)",
    "lazyreader (>1.0.0)",
    "jinja2 (>2.11.2)",
    "jsonmerge (>=1.8.0)",
    "num2words (>=0.5.10)",
    "iso639 (>=0.1.4)",
    "dcxml (>=0.1.2)",
    "DeepDiff (>=5.5.0)",
    "docutils (<0.18.0)",
    "wtforms (<3.0.0)",
    # to avoid conflict for urllib3
    "dparse (>=0.5.2)",
    "Mako (>=1.2.2)",
    # "rero-invenio-base (>=0.3.0)",
    "jsonresolver",
    # needed for elasticsearch 7.13.4
    "urllib3 (<2.0.0)",
    "pyparsing (>=3.1.1)",
    "flask-wiki (>=0.3.1)",
     "poethepoet",
     "flask-menu (<2.0.0)",
    "isort (>=6.0.0)",
    "black (>=25.1.0,<26.0.0)",

    ## SONAR Specific
    "fuzzywuzzy (==0.18.0)",
    "pycountry (==23.12.11)",
    "netaddr (==0.9.0)",
    "wand (==0.6.13)",
    "webdavclient3 (==3.14.6)",
    "pysftp (==0.2.9)",
    "python-slugify",
    "orcid (==1.0.3)",
    "python3-saml (==1.16.0)",
    "python-levenshtein (==0.23.0)",
    # "jsonschema (<=4.20.0)",
    "flask-breadcrumbs (>=0.5.1,<0.6.0)"
]

[tool.poetry.group.dev.dependencies]
pytest-invenio = ">=2.1.6,<3.0.0"
pydocstyle = ">=6.1.1"
pytest-black = ">=0.3.2"
pytest-black-ng = ">=0.4.0"
Sphinx = ">=4.5.0"
Flask-Debugtoolbar = ">=0.10.1"
## RERO ILS specific python packages
pip-audit = ">=2.8.0,<3.0.0"
mock = ">=2.0.0"
autoflake = ">=1.3.1"
appnope = { version = "*",optional = true }
beautifulsoup4 = "^4.11.1"
requests-mock = "^1.11.0"

[project.entry-points."app.console_scripts"]
sonar = "invenio_app.cli:cli"

[project.entry-points."flask.commands"]
documents = "sonar.modules.documents.cli.documents:documents"
ark = "sonar.modules.ark.cli:ark"
oaiharvester = "sonar.modules.documents.cli.oaiharvester:oaiharvester"
es = "sonar.elasticsearch.cli:es"
heg = "sonar.heg.cli:heg"
resources = "sonar.resources.cli:resources"
imports = "sonar.modules.cli.imports:imports"
fixtures = "sonar.modules.cli.fixtures:fixtures"
utils = "sonar.modules.cli.utils:utils"
sitemap = "sonar.modules.sitemap.cli.sitemap:sitemap"

[project.entry-points."invenio_base.apps"]
sonar = "sonar.ext:Sonar"
documents = "sonar.modules.documents:Documents"
shibboleth_authenticator = "sonar.modules.shibboleth_authenticator:ShibbolethAuthenticator"

[project.entry-points."invenio_base.api_apps"]
sonar = "sonar.ext:SonarAPI"
documents = "sonar.modules.documents:Documents"
organisations = "sonar.modules.organisations:Organisations"
invenio_i18n = "invenio_i18n:InvenioI18N"

[project.entry-points."invenio_base.blueprints"]
dedicated = "sonar.dedicated.views:blueprint"
help = "sonar.help.views:blueprint"
collections = "sonar.modules.collections.views:blueprint"
documents = "sonar.modules.documents.views:blueprint"
pdf_extractor = "sonar.modules.pdf_extractor.views.client:blueprint"
shibboleth_authenticator = "sonar.modules.shibboleth_authenticator.views.client:blueprint"
theme = "sonar.theme.views:blueprint"
validation = "sonar.modules.validation.views:blueprint"
users = "sonar.modules.users.views:blueprint"
sitemap = "sonar.modules.sitemap.views:blueprint"
ark = "sonar.modules.ark.views:blueprint"

[project.entry-points."invenio_base.api_blueprints"]
deposits = "sonar.modules.deposits.rest:api_blueprint"
documents = "sonar.modules.documents.rest:api_blueprint"
pdf_extractor = "sonar.modules.pdf_extractor.views.api:api_blueprint"
swisscovery = "sonar.modules.swisscovery.rest:api_blueprint"
monitoring = "sonar.monitoring.views:api_blueprint"
suggestions = "sonar.suggestions.rest:api_blueprint"
translations = "sonar.translations.rest:api_blueprint"
users = "sonar.modules.users.views:blueprint"

[project.entry-points."invenio_assets.webpack"]
sonar_theme = "sonar.theme.webpack:theme"

[project.entry-points."invenio_config.module"]
sonar = "sonar.config"
sonar_documents = "sonar.modules.documents.config"
shibboleth_authenticator = "sonar.modules.shibboleth_authenticator.config"
pdf_extractor = "sonar.modules.pdf_extractor.config"

[project.entry-points."invenio_db.alembic"]
sonar = "sonar:alembic"

[project.entry-points."invenio_i18n.translations"]
messages = "sonar"
messages_wiki = "flask_wiki"

[project.entry-points."invenio_jsonschemas.schemas"]
documents = "sonar.modules.documents.jsonschemas"
organisations = "sonar.modules.organisations.jsonschemas"
users = "sonar.modules.users.jsonschemas"
deposits = "sonar.modules.deposits.jsonschemas"
projects = "sonar.resources.projects.jsonschemas"
projects_hepvs = "sonar.dedicated.hepvs.projects.jsonschemas"
collections = "sonar.modules.collections.jsonschemas"
subdivisions = "sonar.modules.subdivisions.jsonschemas"
stats = "sonar.modules.stats.jsonschemas"
common = "sonar.common.jsonschemas"

[project.entry-points."invenio_search.mappings"]
documents = "sonar.modules.documents.mappings"
organisations = "sonar.modules.organisations.mappings"
users = "sonar.modules.users.mappings"
deposits = "sonar.modules.deposits.mappings"
projects = "sonar.resources.projects.mappings"
collections = "sonar.modules.collections.mappings"
subdivisions = "sonar.modules.subdivisions.mappings"
stats = "sonar.modules.stats.mappings"

[project.entry-points."invenio_search.templates"]
base-record = "sonar.es_templates:list_es_templates"

[project.entry-points."invenio_pidstore.minters"]
document_id = "sonar.modules.documents.api:document_pid_minter"
organisation_id = "sonar.modules.organisations.api:organisation_pid_minter"
user_id = "sonar.modules.users.api:user_pid_minter"
deposit_id = "sonar.modules.deposits.api:deposit_pid_minter"
collections_id = "sonar.modules.collections.api:pid_minter"
subdivisions_id = "sonar.modules.subdivisions.api:pid_minter"
stats_id = "sonar.modules.stats.api:pid_minter"

[project.entry-points."invenio_pidstore.fetchers"]
document_id = "sonar.modules.documents.api:document_pid_fetcher"
organisation_id = "sonar.modules.organisations.api:organisation_pid_fetcher"
user_id = "sonar.modules.users.api:user_pid_fetcher"
deposit_id = "sonar.modules.deposits.api:deposit_pid_fetcher"
collections_id = "sonar.modules.collections.api:pid_fetcher"
subdivisions_id = "sonar.modules.subdivisions.api:pid_fetcher"
stats_id = "sonar.modules.stats.api:pid_fetcher"

[project.entry-points."invenio_records.jsonresolver"]
organisation = "sonar.modules.organisations.jsonresolvers"
user = "sonar.modules.users.jsonresolvers"
document = "sonar.modules.documents.jsonresolvers"
project = "sonar.resources.projects.jsonresolvers"
collections = "sonar.modules.collections.jsonresolvers"
subdivisions = "sonar.modules.subdivisions.jsonresolvers"

[project.entry-points."invenio_celery.tasks"]
documents = "sonar.modules.documents.tasks"
stats = "sonar.modules.stats.tasks"
sitemap = "sonar.modules.sitemap.tasks"

[project.entry-points."invenio_admin.views"]
stats = "sonar.modules.stats.admin:stats_adminview"

[project.entry-points."babel.extractors"]
json = "sonar.modules.babel_extractors:extract_json"

[tool.poe.tasks]
bootstrap = {cmd = "./scripts/bootstrap", help = "Runs bootstrap"}
console = {cmd = "./scripts/console", help = "Opens invenio shell"}
run_tests = {cmd = "./scripts/test", help = "Runs all tests"}
tests = {cmd = "pytest", help = "pytest"}
tests_debug = {cmd = "./scripts/pytest -s --v --no-cov", help = "pytest -s --v --no-cov"}
server = {cmd = "./scripts/server", help = "Starts the server "}
setup = {cmd = "./scripts/setup", help = "Runs setup"}

[build-system]
requires = ["poetry>=0.12", "setuptools<58"]
build-backend = "poetry.core.masonry.api"

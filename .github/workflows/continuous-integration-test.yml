name: build
on: [push, pull_request, workflow_dispatch]

env:
  TERM: xterm-256color

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dependencies: ['dev', 'deploy']
    steps:
    - uses: actions/checkout@v4

    - name: Install Libraries
      run: |
        sudo apt-get update -y
        sudo apt-get install -y pkg-config libxml2-dev libxmlsec1-dev libxmlsec1-openssl
        sudo apt-get install -y libxml2 ghostscript imagemagick
        wget http://security.ubuntu.com/ubuntu/pool/main/p/poppler/libpoppler73_0.62.0-2ubuntu2.14_amd64.deb
        sudo apt-get install ./libpoppler73_0.62.0-2ubuntu2.14_amd64.deb
        wget http://archive.ubuntu.com/ubuntu/pool/universe/x/xpdf/xpdf_3.04-7_amd64.deb
        sudo apt-get install ./xpdf_3.04-7_amd64.deb
        sudo sed -i 's/<policy domain="coder" rights="none" pattern="PDF" \/>/<policy domain="coder" rights="read" pattern="PDF" \/>/g' /etc/ImageMagick-6/policy.xml

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Docker compose up
      run: docker-compose up -d

    - name: Setup Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Run Bootstrap
      run: |
        poetry run ./scripts/bootstrap
        pip install --upgrade coveralls

    - name: Bootstrap
      if: ${{ matrix.dependencies == 'dev' }}
      run: |
        poetry run ./scripts/bootstrap --ci
        pip install --upgrade coveralls

    - name: Bootstrap deploy
      if: ${{ matrix.dependencies == 'deploy' }}
      run: |
        poetry run ./scripts/bootstrap --ci --deploy E2E=yes

    - name: Run Test
      run: poetry run ./scripts/test

    - name: Code Coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_SERVICE_NAME: github
      run: coveralls

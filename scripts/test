#!/usr/bin/env bash
# Swiss Open Access Repository
# Copyright (C) 2025 RERO+
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.

# COLORS for messages
NC='\033[0m'                    # Default color
INFO_COLOR='\033[1;97;44m'      # Bold + white + blue background
SUCCESS_COLOR='\033[1;97;42m'   # Bold + white + green background
ERROR_COLOR='\033[1;97;41m'     # Bold + white + red background

PROGRAM=`basename $0`
SCRIPT_PATH=$(dirname "$0")

# MESSAGES
msg() {
  echo -e "${1}" 1>&2
}
# Display a colored message
# More info: https://misc.flogisoft.com/bash/tip_colors_and_formatting
# $1: choosen color
# $2: title
# $3: the message
colored_msg() {
  msg "${1}[${2}]: ${3}${NC}"
}

info_msg() {
  colored_msg "${INFO_COLOR}" "INFO" "${1}"
}

error_msg() {
  colored_msg "${ERROR_COLOR}" "ERROR" "${1}"
}

error_msg+exit() {
    error_msg "${1}" && exit 1
}

success_msg() {
  colored_msg "${SUCCESS_COLOR}" "SUCCESS" "${1}"
}

success_msg+exit() {
  colored_msg "${SUCCESS_COLOR}" "SUCCESS" "${1}" && exit 0
}

set -e

SCRIPT_PATH=$(dirname "$0")

source ${SCRIPT_PATH}/functions

# uv is a mandatory condition to launch this program!
if [[ -z "${VIRTUAL_ENV}" ]]; then
  message "Launch this script via uv command: uv run ${PROGRAM}" "error"
  exit 1
fi

pip_audit_exceptions=""
section "Check vulnerabilities:"
# future  1.0.0   GHSA-xqrq-4mgf-ff32
add_exceptions "GHSA-xqrq-4mgf-ff32"
# py      1.11.0  PYSEC-2022-42969
add_exceptions "PYSEC-2022-42969"
# urllib3 1.26.20 GHSA-pq67-6m6q-mj2v 2.5.0
add_exceptions "GHSA-pq67-6m6q-mj2v"
# future  1.0.0   GHSA-xqrq-4mgf-ff32
add_exceptions "GHSA-xqrq-4mgf-ff32"
PIPAPI_PYTHON_LOCATION=$(which python) pip-audit ${pip_audit_exceptions}


info_msg "Test formatting:"
ruff format --check .
info_msg "Test linting:"
ruff check sonar tests

info_msg "Sphinx-build:"
sphinx-build -qnNW docs docs/_build/html
pytest

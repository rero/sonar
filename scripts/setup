#!/usr/bin/env bash
# Swiss Open Access Repository
# Copyright (C) 2021 RERO
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source $(dirname "$0")/functions

set -e

# uv is a mandatory condition to launch this program!
if [[ -z "${VIRTUAL_ENV}" ]]; then
  message "Launch this script via uv command: uv run ${PROGRAM}" "error"
  exit 1
fi

title "Application setup"

fixtures_folder='./data'


message "All data will be cleared!" "warning"

# Try to create database and tables if does not exist
invenio db init create || true

# Purge celery
section "Purge celery tasks" "info"
celery --app sonar.celery purge -f

# Clean redis
section "Clear redis cache" "info"
invenio shell --no-term-title -c "import redis; redis.StrictRedis.from_url(app.config['CACHE_REDIS_URL']).flushall(); print('Cache cleared')"

fixtures_folder='./data'

section "Clear files" "info"
invenio utils clear-files

section "Initialize database" "info"
invenio db drop --yes-i-know
invenio db create

section "Initialize elasticsearch indexes" "info"
invenio index destroy --force --yes-i-know
invenio utils es-init --force # To take templates into account
invenio index queue init purge

section "Initialize invenio queues."
invenio queues delete
invenio queues declare

# Create admin role to restrict access
section "Create roles for users" "info"
invenio roles create superuser
invenio roles create admin
invenio roles create moderator
invenio roles create submitter
invenio roles create user

section "Initialize access for roles" "info"
invenio access allow superuser-access role superuser
invenio access allow admin-access role superuser
invenio access allow admin-access role admin
invenio access allow admin-access role moderator
invenio access allow admin-access role submitter
message "Done" "success"

section "Create user for monitoring" "info"
invenio users create --active --confirm --password monitor monitoring@rero.ch
invenio roles create monitoring
invenio roles add monitoring@rero.ch monitoring
# create token access for monitoring
token_create monitoring monitoring@rero.ch ${INVENIO_RERO_ACCESS_TOKEN_MONITORING}

# Create a default location for depositing files
section "Create location for storing files" "info"
invenio fixtures deposits create

# Initialize flask wiki
section "Initialize wiki search"
invenio flask_wiki init-index
invenio flask_wiki index

# Create users and organisations
section "Create organisations" "info"
invenio fixtures organisations import "${fixtures_folder}/organisations/data.json"

section "Create users" "info"
invenio fixtures users import "${fixtures_folder}/users/data.json"

section "Create documents" "info"
invenio fixtures documents import "${fixtures_folder}/documents/data.json"

message "\nInstallation finished successfully" "success"

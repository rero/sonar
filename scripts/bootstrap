#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#
# Swiss Open Access Repository
# Copyright (C) 2021 RERO
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source $(dirname "$0")/functions

set -e

deploy=false
ui_tgz=""

# Poetry is a mandatory condition to launch this program!
if [[ -z "${VIRTUAL_ENV}" ]]; then
  message "Launch this script via poetry command: poetry run ${PROGRAM}" "error"
  exit 1
fi

# Check arguments and options
while test $# -gt 0; do
    case "$1" in
        --ui)
            if [ ! -z "$2" ]; then
              ui_tgz=$2
              shift
            fi
            ;;
        --deploy)
            deploy=true
            ;;
        *) message "Option $1 not recognized" "error" ;;
    esac
    shift
done

title "Bootstrap script"

# Update pip version
section "Upgrading pip..." "info"
poetry run pip install --upgrade pip

# Installs all packages specified in poetry.lock
if [ "$deploy" = false ]; then
  section "Updating dependencies" "info"
  poetry install
fi

# Collect static files
section "Collect static files" "info"
invenio collect -v

# Store folder path
assets_folder=$(invenio shell --no-term-title -c "print(app.config.get('WEBPACKEXT_PROJECT_BUILDDIR'))")
static_folder=$(invenio shell --no-term-title -c "print('static_folder:%s' % app.static_folder)"|grep static_folder| cut -d: -f2-)

section "Install assets" "info"

# Remove installed RERO packages (in case they was installed with pack)
rm -rf ${assets_folder}/node_modules/@rero

# Build webpack assets
invenio webpack buildall

if [ ! -z "$ui_tgz" ]; then
  message "Install UI from $ui_tgz" "info"
  npm i $ui_tgz --prefix $assets_folder
fi

# Copy sonar-ui files to static folder to use it with flask-assets
mkdir -p ${static_folder}/sonar-ui
cp -R ${assets_folder}/node_modules/@rero/sonar-ui/dist/sonar/* ${static_folder}/sonar-ui

# Copy worker from pdfjs to avoid a 404 error when previewing PDF files.
cp ${assets_folder}/node_modules/pdfjs-dist/build/pdf.worker.min.js ${static_folder}/js/pdfjs/

# Compile JSON schemas
section "Compile JSON schemas" "info"
invenio utils compile-json ./sonar/modules/organisations/jsonschemas/organisations/organisation-v1.0.0_src.json -o ./sonar/modules/organisations/jsonschemas/organisations/organisation-v1.0.0.json
invenio utils compile-json ./sonar/modules/documents/jsonschemas/documents/document-v1.0.0_src.json -o ./sonar/modules/documents/jsonschemas/documents/document-v1.0.0.json
invenio utils compile-json ./sonar/modules/deposits/jsonschemas/deposits/deposit-v1.0.0_src.json -o ./sonar/modules/deposits/jsonschemas/deposits/deposit-v1.0.0.json
invenio utils compile-json ./sonar/modules/collections/jsonschemas/collections/collection-v1.0.0_src.json -o ./sonar/modules/collections/jsonschemas/collections/collection-v1.0.0.json
invenio utils compile-json ./sonar/modules/subdivisions/jsonschemas/subdivisions/subdivision-v1.0.0_src.json -o ./sonar/modules/subdivisions/jsonschemas/subdivisions/subdivision-v1.0.0.json
invenio utils compile-json ./sonar/resources/projects/jsonschemas/projects/project-v1.0.0_src.json -o ./sonar/resources/projects/jsonschemas/projects/project-v1.0.0.json
invenio utils compile-json ./sonar/dedicated/hepvs/projects/jsonschemas/hepvs/projects/project-v1.0.0_src.json -o ./sonar/dedicated/hepvs/projects/jsonschemas/hepvs/projects/project-v1.0.0.json

# Compile translations catalogs
section "Compile translations catalogs" "info"
python ./setup.py compile_catalog

message "\nBootstrap finished successfully" "success"
